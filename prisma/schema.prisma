// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id    String @id @unique //matches kinde user id
  email String @unique

  File    File[]
  Message Message[]

  stripeCustomerId       String?   @unique @map(name: "stripe_customer_id")
  stripeSubscriptionId   String?   @unique @map(name: "stripe_subscription_id")
  stripePriceId          String?   @map(name: "stripe_price_id")
  stripeCurrentPeriodEnd DateTime? @map(name: "stripe_current_period_end")

  Measurements Measurements[]
}

enum UploadStatus {
  PENDING
  PROCESSING
  FAILED
  SUCCESS
}

model File {
  id   String @id @default(cuid())
  name String

  uploadStatus UploadStatus @default(PENDING)

  url      String
  key      String
  messages Message[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  measuredAt DateTime @default(now())

  User   User?   @relation(fields: [userId], references: [id])
  userId String?

  Measurements Measurements[]
}

model Message {
  id   String @id @default(cuid())
  text String @db.Text()

  isUserMessage Boolean

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  File      File?    @relation(fields: [fileId], references: [id])
  fileId    String?
}

model MeasureType {
  type_name    String         @id @unique
  Synonym      Synonym[]
  Measurements Measurements[]
}

model Synonym {
  id        Int         @id @default(autoincrement())
  name      String      @unique
  Measure   MeasureType @relation(fields: [type_name], references: [type_name], onDelete: Cascade)
  type_name String
}

model Measurements {
  id         Int      @id @default(autoincrement())
  value      Float
  unit       String
  measuredAt DateTime @default(now())

  // Linking directly to the MeasureType table via type_name
  Measure   MeasureType @relation(fields: [type_name], references: [type_name], onDelete: Cascade)
  type_name String

  // Linking to the File table
  File   File   @relation(fields: [FileId], references: [id], onDelete: Cascade)
  FileId String

  // Adding a direct User link
  User   User   @relation(fields: [UserId], references: [id], onDelete: Cascade)
  UserId String
}
